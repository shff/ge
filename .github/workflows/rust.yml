name: Rust

on: [push]

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
      - run: rustup target add aarch64-apple-darwin x86_64-apple-darwin x86_64-apple-ios aarch64-apple-ios wasm32-unknown-unknown
      - run: cargo install cargo-bundle || true
      - run: cargo update
      - run: cargo bundle --format osx --target=x86_64-apple-darwin --release
      - run: cargo bundle --format osx --target=aarch64-apple-darwin --release
      - run: cargo bundle --format ios --target=x86_64-apple-ios --release
      - run: cargo bundle --format ios --target=aarch64-apple-ios --release
      - run: cargo build --release --target=wasm32-unknown-unknown
      - uses: actions/upload-artifact@v2
        with:
          name: vigier-macos
          path: |
            target/aarch64-apple-darwin/release/bundle/osx/Vigier.app
            target/x86_64-apple-darwin/release/bundle/osx/Vigier.app
            target/x86_64-apple-ios/release/bundle/ios/Vigier.app
            target/aarch64-apple-ios/release/bundle/ios/Vigier.app
            target/wasm32-unknown-unknown/release/vigier.wasm
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup target add x86_64-pc-windows-msvc i686-pc-windows-msvc
      - run: cargo update
      - run: cargo build --target=x86_64-pc-windows-msvc --release
      - run: cargo build --target=i686-pc-windows-msvc --release
      - uses: actions/upload-artifact@v2
        with:
          name: vigier-win32
          path: |
            target/x86_64-pc-windows-msvc/release/vigier.exe
            target/i686-pc-windows-msvc/release/vigier.exe
  linux:
    runs-on: ubuntu-latest
    env:
      CFLAGS: -I/usr/local/lib/android/sdk/ndk/22.1.7171670/sources/android/native_app_glue
      CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER: aarch64-linux-android30-clang
      CARGO_TARGET_ARMV7_LINUX_ANDROIDEABI_LINKER: armv7a-linux-androideabi30-clang
      CARGO_TARGET_I686_LINUX_ANDROID_LINKER: i686-linux-android30-clang
      CARGO_TARGET_X86_64_LINUX_ANDROID_LINKER: x86_64-linux-android30-clang
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup target add i686-unknown-linux-gnu x86_64-unknown-linux-gnu i686-linux-android x86_64-linux-android armv7-linux-androideabi aarch64-linux-android
      - run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install libc6-dev libc6-dev-i386 mesa-common-dev libgl1-mesa-dev libgl1 mesa-common-dev:i386 libgl1-mesa-dev:i386 libgl1:i386 libasound2-dev libasound2-dev:i386
      - run: cargo build --release --target=i686-unknown-linux-gnu
      - run: cargo build --release --target=x86_64-unknown-linux-gnu
      - run: echo "/usr/local/lib/android/sdk/ndk/22.1.7171670/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH
      - run: cargo build --lib --release --target=aarch64-linux-android
      - uses: actions/upload-artifact@v2
        with:
          name: vigier-linux
          path: |
            target/i686-unknown-linux-gnu/release/vigier
            target/x86_64-unknown-linux-gnu/release/vigier
